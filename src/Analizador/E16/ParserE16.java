
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Sep 08 18:21:51 CST 2019
//----------------------------------------------------

package Analizador.E16;

import java_cup.runtime.*;
import Analizador.util.*;
import intefaz.Principal;
import java.util.Stack;
import java.util.ArrayList;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Sep 08 18:21:51 CST 2019
  */
public class ParserE16 extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public ParserE16() {super();}

  /** Constructor which sets the default scanner. */
  public ParserE16(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserE16(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\015\000\002\002\003\000\002\002\004\000\002\003" +
    "\010\000\002\010\005\000\002\010\003\000\002\011\003" +
    "\000\002\011\003\000\002\012\005\000\002\012\004\000" +
    "\002\014\003\000\002\014\003\000\002\013\011\000\002" +
    "\013\010" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\041\000\004\022\005\001\002\000\004\002\001\001" +
    "\002\000\004\010\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\000\001\002\000\010\020\016\021\020\022" +
    "\015\001\002\000\006\011\ufffd\017\ufffd\001\002\000\006" +
    "\011\041\017\025\001\002\000\010\011\ufffc\012\037\017" +
    "\ufffc\001\002\000\004\024\036\001\002\000\004\010\031" +
    "\001\002\000\004\024\ufff7\001\002\000\010\011\ufffb\012" +
    "\021\017\ufffb\001\002\000\004\024\ufff8\001\002\000\004" +
    "\010\022\001\002\000\010\020\016\021\020\022\015\001" +
    "\002\000\006\011\024\017\025\001\002\000\004\023\027" +
    "\001\002\000\010\020\016\021\020\022\015\001\002\000" +
    "\006\011\ufffe\017\ufffe\001\002\000\004\024\030\001\002" +
    "\000\010\011\ufff6\012\ufff6\017\ufff6\001\002\000\010\020" +
    "\016\021\020\022\015\001\002\000\006\011\033\017\025" +
    "\001\002\000\004\023\034\001\002\000\004\024\035\001" +
    "\002\000\010\011\ufff5\012\ufff5\017\ufff5\001\002\000\010" +
    "\011\ufff9\012\ufff9\017\ufff9\001\002\000\004\024\040\001" +
    "\002\000\010\011\ufffa\012\ufffa\017\ufffa\001\002\000\004" +
    "\023\042\001\002\000\004\024\043\001\002\000\004\002" +
    "\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\041\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\010\011\011\010\012\012\013\016\014\013\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\010\022\011\010\012\012\013\016\014\013\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\011\025\012\012" +
    "\013\016\014\013\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\010\031\011\010\012\012" +
    "\013\016\014\013\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserE16$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserE16$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserE16$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.err.println("Error en la Línea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "
        +s.value + " no reconocido." );
        Analizador.AnalizadorLenguaje.getErrores().add(new MiError("identificador \""+s.value+"\" no identificado", TipoError.SINTACTICO, 
        "",(s.right+1), (s.left+1)));
        
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    getErrores().*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error en la Línea " + (s.right+1)+ "Columna "+(s.left+1)+". Identificador " +
        s.value + " no reconocido.");  
        Analizador.AnalizadorLenguaje.getErrores().add(new MiError("identificador \""+s.value+"\" no identificado", TipoError.SINTACTICO, 
        "",(s.right+1), (s.left+1)));
  
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$ParserE16$actions {




  private final ParserE16 parser;

  /** Constructor */
  CUP$ParserE16$actions(ParserE16 parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$ParserE16$do_action(
    int                        CUP$ParserE16$act_num,
    java_cup.runtime.lr_parser CUP$ParserE16$parser,
    java.util.Stack            CUP$ParserE16$stack,
    int                        CUP$ParserE16$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserE16$result;

      /* select the action based on the action number */
      switch (CUP$ParserE16$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // LE ::= pr_struct par1 L par2 dospuntos id 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).value;
		int letraleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int letraright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		String letra = (String)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
Atributo att = (Atributo)a;

RESULT = new Atributo("struct (\n"+att.getValor()+"):"+letra,"struct");

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("LE",9, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-5)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // LE ::= LE coma par1 L par2 dospuntos id 
            {
              Object RESULT =null;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-6)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-6)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-6)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).value;
		int letraleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int letraright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		String letra = (String)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
Atributo le = (Atributo)b;
Atributo att = (Atributo)a;
RESULT = new Atributo(le.getValor()+",\n"+le.getT()+" (\n"+att.getValor()+"):"+letra,le.getT());

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("LE",9, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-6)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // T ::= pr_int 
            {
              Object RESULT =null;
		RESULT="int";
              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("T",10, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // T ::= pr_char 
            {
              Object RESULT =null;
		RESULT="char";
              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("T",10, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // LI ::= T id 
            {
              Object RESULT =null;
		int tipoleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)).left;
		int tiporight = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)).right;
		Object tipo = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
RESULT=new Atributo(tipo+" "+id,tipo.toString());

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("LI",8, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // LI ::= LI coma id 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
Atributo att = (Atributo)a;
RESULT= new Atributo(att.getValor()+",\n"+att.getT()+" "+id,att.getT());

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("LI",8, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ML ::= LE 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		RESULT=val;
              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("ML",7, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ML ::= LI 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		RESULT=val;
              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("ML",7, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // L ::= ML 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		RESULT=val;
              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("L",6, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // L ::= L puntoycoma ML 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
Atributo l = (Atributo)a;
Atributo ml = (Atributo)b;

RESULT = new Atributo(l.getValor()+",\n"+ml.getValor(),"");

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("L",6, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-2)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // A ::= pr_struct par1 L par2 dospuntos id 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
Atributo l = (Atributo)a;
RESULT=new Atributo("struct (\n"+l.getValor()+"):"+id,"");

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("A",1, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-5)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)).value;
		RESULT = start_val;
              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.elementAt(CUP$ParserE16$top-1)), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserE16$parser.done_parsing();
          return CUP$ParserE16$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // INICIO ::= A 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserE16$stack.peek()).value;
		
Atributo l = (Atributo)val;
Principal.escribirMensajeEnConsola(l.getValor());

              CUP$ParserE16$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserE16$stack.peek()), RESULT);
            }
          return CUP$ParserE16$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

